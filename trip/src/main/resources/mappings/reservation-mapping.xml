<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ReservationDAO">


	<!-- (회원) 숙소 예약 등록 -->
	<insert id="insertReservation">
		INSERT INTO RESERVATION (USER_ID, IMP_UID, MERCHANT_UID, RES_NAME, RES_TEL, RES_EMAIL, HOST_ID, ROOM_ID, ROOM_NAME, ROOM_IMG, PAY_DATE, PAY_AMOUNT, RES_NUM, 
		RES_CHECKIN, RES_CHECKOUT)
		VALUES(#{user_id}, #{imp_uid}, #{merchant_uid}, #{res_name}, #{res_tel}, #{res_email}, #{host_id}, #{room_id}, #{room_name}, #{room_img}, #{pay_date}, #{pay_amount}, #{res_num},
		#{res_checkin}, #{res_checkout})
	</insert>
	
	<!-- (회원) -->
	<!-- 마이페이지 - 예약 현황 눌렀을때 누른 날짜(현재 시간)기준으로 예약 데이터의 체크인 체크아웃 날짜와 비교해 예약 변경 가능 상태 및 리뷰 작성 가능 상태를 점검 및 변경 (업데이트) -->
	<!-- 예약 변경 가능 상태 => '1' == 예약 변경 가능, '2' == 예약 변경 불가, '3' == 예약 취소 완료, '4' == 사용 완료 (리뷰 작성 가능) -->
	
	<update id="updateReservationGet">
		UPDATE RESERVATION
		<set>
		<choose>
		<when test='res_ci3_ok == "false" and res_co_ok == "false"'>
		RES_STATUS = '2' 
		</when>
		<when test='res_ci3_ok == "false" and res_co_ok == "true"'>
		RES_STATUS = '4' 
		</when>
		<when test='res_status = "3"'>
		RES_STATUS = '3'
		</when>
		<otherwise>
		RES_STATUS = '4'
		</otherwise>
		</choose>
		</set>
		WHERE RES_ID = #{res_id} AND USER_ID = #{user_id} 
	</update>
	
	
	<!-- (회원) 숙소 예약 상태 수정 (기본적으로 예약 번호와 유저 아이디와 예약 상태가 취소 가능하다는 상태 아래 일정 조정 즉, 
	체크인/체크아웃 날짜 조정 (처음 예약했던 기간만 가능, 거기서 날짜 변경만 가능 ex) 21~24일 예약 3일 예약 여기서 3일 기준으로 날짜만 변경 가능하게 함) -->
	
	
	<!-- 업데이트 쿼리문 돌려서 예약 변경할때마다 자동적으로 RES_COUNT 컬럼에 들어가는 값이 기존에 있던 값보다 하나씩 줄 예정 
	(초기값 3 => 2 => 1 => 0 => 0되면 더이상 수정이 불가능하도록 조치 예정 -->
	
	
	<!-- 거기다가 예약자 이름, 전화번호, 이메일 기본정보도 같이 수정하게 함 -->
	
	<update id="updateReservationPost">
	UPDATE RESERVATION
	SET RES_CHECKIN = #{res_checkin}, RES_CHECKOUT = #{res_checkout}, RES_NAME = #{res_name}, RES_TEL = #{res_tel}, RES_EMAIL = #{res_email}, RES_NUM = #{res_num}
	WHERE RES_ID = #{res_id} AND USER_ID = #{user_id} AND RES_STATUS = "1"
	</update>
	
	
	<!-- (회원) 숙소 예약 삭제 => 처음 계획했던 일정에서 더 추가 일자로 숙박하거나 더 적게 숙박해야할때 먼저 취소 후 새로 다시 등록 (재예약) -->
	<delete id="deleteReservation">
		DELETE FROM RESERVATION WHERE
		RES_ID = #{res_id} AND USER_ID = #{user_id}
	</delete>
	
	
	<!-- (회원) 숙소 예약 취소(update 쿼리문으로 RES_STATUS를 "3"으로 변경 결제 취소가 먼저 이뤄지고 DB에서 이렇게 변경)-->
	<update id="updateReservationCancel">
		UPDATE RESERVATION
		SET RES_STATUS = '3'
		WHERE RES_ID = #{res_id} AND USER_ID = #{user_id} AND RES_STATUS = '1'
	</update>
	
	
	<!-- (회원) 아이디에 맞는 숙소 예약 조회  -->
	<select id="getReservationList" resultType="reservation">
		SELECT * FROM RESERVATION
		<if test="user_id != null"> 
		WHERE USER_ID = #{user_id}
		</if>
		<!-- ORDER BY SEQ DESC  -->
		<!-- LIMIT 10 OFFSET #{offset} -->
	</select>
	
	
	<!-- (회원) 아이디에 맞는 숙소 총 예약 갯수 조회 -->
	<select id="totalReservationListCnt" resultType="_int">
		SELECT COUNT(*) FROM RESERVATION WHERE USER_ID = #{user_id}
	</select>
	
	
	<!-- (호스트) 내 숙소의 예약현황 조회 (현성규) -->
	<select id="getReservationListForHost" resultType="reservation">
		SELECT * FROM RESERVATION WHERE HOST_ID = #{host_id}
		<!-- ORDER BY SEQ DESC  -->
		<!-- LIMIT 10 OFFSET #{offset} -->
	</select>


	<!-- (호스트) 내 숙소의 예약현황 개수 조회 (현성규) -->
	<select id="totalReservationListcntForHost" resultType="_int">
		SELECT COUNT(*) FROM RESERVATION WHERE HOST_ID = #{host_id}
	</select>
	
	
	<!-- (회원) 예약 한 건에 대해 상세 조회 -->
	<select id="getReservationOneDetail" resultType="reservation">
		SELECT * FROM RESERVATION
		WHERE USER_ID = #{user_id} AND RES_ID = #{res_id} AND IMP_UID = #{imp_uid} AND MERCHANT_UID = #{merchant_uid}
	</select>
	
	
</mapper>
